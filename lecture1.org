#+TITLE: Beginning Programming in Javascript
#+AUTHOR: Clarissa Littler

#+startup: beamer
#+BEAMER_THEME: Madrid
#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [bigger]


#+BEAMER_FRAME_LEVEL: 2
* Why Learn Programming?
** What You'll Learn Here
   + What programming *is* \pause
   + The basics of Javascript \pause
   + What to learn next
** Why Learn Programming?
   + To get a job \pause
   + To make your own websites \pause
   + To write your own mobile apps \pause
   + Because it's fun!
** This Course
   + Three weeks \pause
   + Two hours each \pause
   + Lecture and small exercises
** Programming The Web
   + Browsers \pause
   + Servers \pause
   + Modern interactive webpages
** Write Scripts
   + Browser extensions \pause
   + Chrome plugins \pause
   + Make websites what you want to be \pause
   + Millenials => Lizard People
** Javascript is Ubiquitous
   + One of the most common languages \pause
   + Powers all interactive websites
** Javascript is Simple(ish)
   + The core of Javascript is simple \pause
   + Complicated features are avoidable \pause
* What Is Programming?
** Following Directions
*** Directions to Central Library 				    :B_block:
    :PROPERTIES:
    :BEAMER_env: block
    :END:
    (insert screenshot)
*** 								    :B_block:
    :PROPERTIES:
    :BEAMER_env: block
    :END:
    As a person you know how to translate directions into actions, maps into navigation
** Understanding Recipes
*** 								    :B_block:
    :PROPERTIES:
    :BEAMER_env: block
    :END:
Cook celery and onion together til soft, then add frozen spinach and cook to get some of the moisture out and reduce volume add broth lentils cilantro and other spices, stir thoroughly, throw bay leaves on top.

Cook for 40 minutes

Turn off heat, wait til it stops bubbling and blend thoroughly.

Cook for 5-10 minutes after blending   
** Building Furniture
*** 								    :B_block:
    :PROPERTIES:
    :BEAMER_env: block
    :END:
    Let's say you're building furniture from Scandanavian Store. You follow their wordless visual instructions to fit everything together step-by-step.
** Computation
   + Everything we can do is computation \pause
     + Finite data \pause
     + Finite steps \pause
     + Finite time
** Computers
   + Machines for performing computation \pause
   + Computers have limits \pause
     + Finite memory \pause
     + Finite programs \pause
     + Finite time
** Programs Are...
   + Precise instructions for computers \pause
   + Describe computations \pause
   + Readable for humans
** A Programming Language Is
   + A specialized language for instructions \pause
   + 
** Machines, Hand Holding, and New Ways of Thinking
   + Humans can infer instructions \pause
   + Machines cannot \pause
   + Precise thinking is hard \pause
   + And that's okay!
** Programming Languages
   + Programming language as /formal/ language of instructions \pause
   + Many different languages \pause
   + 
* Basics of Javascript
** Syntax
   + Human language is fluid \pause
   + Exhibit A: Tumblr \pause
   + Computers need unambiguous language \pause
   + Formal syntax
** Verbs vs. Nouns
   + Every language has nouns and verbs \pause
   + Nouns :: subject matter \pause
   + Verbs :: how it's used \pause
   + Nouns and verbs of Javascript \pause
     + Data \pause
     + Control flow
** Forms of Data
   + Strings \pause
   + Numbers \pause
   + Lists \pause
   + Collections
** Evaluating Code By Hand
   + All code can be evaluated by hand \pause
   + Useful skill \pause
   + Helps debugging
** Two Preliminaries
   + 
** Writing to Console
*** 							      :B_block:BMCOL:
    :PROPERTIES:
    :BEAMER_env: block
    :BEAMER_col: 0.4
    :END:
   + ~console.log~ 
   + takes a value and prints it
*** 							      :B_block:BMCOL:
    :PROPERTIES:
    :BEAMER_env: block
    :BEAMER_col: 0.4
    :END:
#+BEGIN_SRC js :exports code
  console.log("this message will print to the console");
#+END_SRC
** Arithmetic
*** 							      :B_block:BMCOL:
    :PROPERTIES:
    :BEAMER_env: block
    :BEAMER_col: 0.4
    :END:
   + basic arithmetic operations
   + addition, subtraction, multiplication, division
   + ~+~ , ~-~, ~*~, ~/~
*** 							      :B_block:BMCOL:
    :PROPERTIES:
    :BEAMER_env: block
    :BEAMER_col: 0.4
    :END:
#+BEGIN_SRC js :exports code :results output
  console.log(10 + 10);
  console.log(10 * 10);
  console.log(10 / 10);
#+END_SRC

#+RESULTS:
: 20
: 100
: 1

** Variables
*** 							      :B_block:BMCOL:
    :PROPERTIES:
    :BEAMER_env: block
    :BEAMER_col: 0.4
    :END:
    + Variables store data
    + 
*** 
** Variables As Containers
** Choices 
*** 								    :B_block:
    :PROPERTIES:
    :BEAMER_env: block
    :END:
    Choices appear in our informal experience with computation.
*** 								    :B_block:
    :PROPERTIES:
    :BEAMER_env: block
    :END:
   + *if* the water is boiling, add the pasta \pause
   + *if* you owe taxes, send money to the IRS \pause
   + *if* it's friday, go grab tea with friends \pause
** Booleans
   + Need a way to make decisions \pause
   + ~true~ \pause
   + ~false~ \pause
   + Boolean type
** Equality
   + ~===~ compares two things \pause
** If-Statements
#+BEGIN_SRC js :exports code
  if (condition){
      ...
  // do these things if the condition is true
  }
  else {
      ...
  // do these things if the condition is false
  }
#+END_SRC
** If-statement examples
#+BEGIN_SRC js :exports code
  if (10 < 20) {
  console.log("one thing");
  }
  else {
  console.log("another thing"):
  }
#+END_SRC
** If-statement examples

** If-statement examples
** Repetition
** For Loops
#+BEGIN_SRC js :exports code
  for(var v = i; v < 100; v = v + 1){
  }
#+END_SRC
** For Loop Examples
** While Loops
* What Makes a Website Tick
** What Happens When You Visit a Webpage
   + 
** The Server
** The Client
** Where Javascript fits in
* Intermmediate Javascript
** Lists in real computation
** Arrays in JavaScript
** Array Examples
** Objects
   + Collections with names
** Making Objects
   
** Objects-as-Containers
** this and That
* Where To Go From Here?
** Learning More Programming
   + Continuing Code Academy \pause
   + 
** Web Programming Track
   + jQuery \pause
   + Node \pause
   + Frameworks
** jQuery
   + 
** Node
   + nodeschool.io
